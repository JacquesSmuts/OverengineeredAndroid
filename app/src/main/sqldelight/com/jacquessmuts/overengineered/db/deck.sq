CREATE TABLE deckEntity (
  id TEXT NOT NULL,
  success INTEGER AS Boolean DEFAULT 0,
  shuffled INTEGER As Boolean DEFAULT 0,
  remaining INTEGER As Int
);

CREATE TABLE cardEntity (
  id TEXT NOT NULL,
  deck_id TEXT NOT NULL,
  image TEXT,
  value TEXT,
  suit TEXT,
  code TEXT
);

CREATE INDEX deck_id ON deckEntity(id);

-- Queries

getTopDeck:
SELECT *
FROM deckEntity
LIMIT 1;

clearDeck:
DELETE
FROM deckEntity;

getCards:
SELECT *
FROM cardEntity
WHERE deck_id = ?;

clearCardsFromOtherDecks:
DELETE
FROM cardEntity
WHERE deck_id != ?;

upsertDeck:
WITH new(id, success, shuffled, remaining) AS (
    SELECT * FROM deckEntity WHERE NULL -- gets type hints without returning rows
    UNION ALL
    VALUES(?, ?, ?, ?)
)
REPLACE INTO deckEntity(id, success, shuffled, remaining)
SELECT
    new.id,
    new.success,
    new.shuffled,
    new.remaining
FROM new
LEFT JOIN deckEntity AS old
    ON old.id = new.id;

insertCard:
INSERT INTO cardEntity(id, deck_id, image, value, suit, code)
VALUES (?, ?, ?, ?, ?, ?);